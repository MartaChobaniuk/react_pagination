{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","countPages","Math","ceil","_jsxs","className","children","_jsx","cn","disabled","href","onClick","prevPage","map","num","active","concat","newPage","length","nextPage","options","items","App","setPerPage","useState","setCurrentPage","pageItems","filter","item","id","value","onChange","event","target","option","htmlFor","buttonPage","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIF,MAAMG,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MACMK,EAAaZ,EAAW,EADhBa,KAAKC,KAAKN,EAAQC,IAmBhC,OACEM,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAChB,CAAEC,SAA0B,IAAhBV,IAAqBO,SAEjCC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QA1BSC,KACXb,EAAc,GAChBC,EAAaD,EAAc,IAwBLO,SACnB,WAKFL,EAAWY,KAAIC,GACdP,cAAA,MACEF,UAAWG,IAAG,YACZ,CAAEO,OAAQhB,IAAgBe,IAAOR,SAGnCC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAM,OAAMF,GACVH,QAASA,IA9BFG,KACfd,EAAac,IA6BUG,CAAQH,GAAKR,SAE3BQ,KAREA,KAaTP,cAAA,MAAIF,UAAWG,IAAG,YAChB,CAAEC,SAAUV,IAAgBE,EAAWiB,SAAUZ,SAEjDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeX,IAAgBE,EAAWiB,OAAS,OAAS,QAC5DP,QAnDSQ,KACXpB,EAAcE,EAAWiB,QAC3BlB,EAAaD,EAAc,IAiDLO,SACnB,eCxEHc,EAAU,CAAC,EAAG,EAAG,GAAI,IACrBC,EAAQhC,EAAW,EAFX,IAGXwB,KAAIpB,GAAKA,IAEC6B,EAAgBA,KAC3B,MAAOxB,EAASyB,GAAcC,mBAASJ,EAAQ,KACxCrB,EAAa0B,GAAkBD,mBAAS,GAc/C,MAAME,EANGL,EAAMM,QAAOC,IACVA,EAAO7B,EAAcD,EAAUA,IACjC8B,GAAQ7B,EAAcD,IAMhC,OACEM,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAU,OACvBjB,EAAW,YAAAiB,OAAWU,EAAU,GAAE,OAAAV,OAAMU,EAAUA,EAAUR,OAAS,GAAE,QAAAF,OA5B1E,GA4BsF,OAG9FZ,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACRsB,GAAG,kBACHxB,UAAU,eACVyB,MAAOhC,EACPiC,SA7BeC,IACvBT,GAAYS,EAAMC,OAAOH,OACzBL,EAAe,IA2BmBnB,SAEzBc,EAAQP,KAAIqB,GACX3B,cAAA,UAAqBuB,MAAOI,EAAO5B,SAChC4B,GADUA,SAOnB3B,cAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACZ,EAAU,CACTE,MAtDM,GAuDNC,QAASA,EACTC,YAAaA,EACbC,aAAeoC,GAAeX,EAAeW,KAE/C7B,cAAA,MAAAD,SACGoB,EAAUb,KAAIe,GACbrB,cAAA,MAEE,UAAQ,OAAMD,SAAA,QAAAU,OAELY,IAHJA,WChEjBS,IAASC,OAAO/B,cAACe,EAAG,IAAKiB,SAASC,eAAe,U","file":"static/js/main.ac989397.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const count = Math.ceil(total / perPage);\n  const countPages = getNumbers(1, count);\n\n  const prevPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage < countPages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const newPage = (num: number) => {\n    onPageChange(num);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item',\n        { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {countPages.map(num => (\n        <li\n          className={cn('page-item',\n            { active: currentPage === num })}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => newPage(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item',\n        { disabled: currentPage === countPages.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === countPages.length ? 'true' : 'false'}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\nconst options = [3, 5, 10, 20];\nconst items = getNumbers(1, total)\n  .map(n => n);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(options[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const perPageSelector = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  function getPageItems() {\n    return items.filter(item => {\n      return +item > currentPage * perPage - perPage\n        && +item <= currentPage * perPage;\n    });\n  }\n\n  const pageItems = getPageItems();\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${pageItems[0]} - ${pageItems[pageItems.length - 1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={perPageSelector}\n          >\n            {options.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(buttonPage) => setCurrentPage(buttonPage)}\n      />\n      <ul>\n        {pageItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}